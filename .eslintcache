[{"/Users/darshan/Desktop/taskpro/test/beezer-com/src/index.js":"1","/Users/darshan/Desktop/taskpro/test/beezer-com/src/App.js":"2","/Users/darshan/Desktop/taskpro/test/beezer-com/src/reportWebVitals.js":"3","/Users/darshan/Desktop/taskpro/test/beezer-com/src/components/Rating.js":"4","/Users/darshan/Desktop/taskpro/test/beezer-com/src/components/Users.js":"5","/Users/darshan/Desktop/taskpro/test/beezer-com/src/firebase.js":"6","/Users/darshan/Desktop/taskpro/test/beezer-com/src/components/Account.js":"7","/Users/darshan/Desktop/taskpro/test/beezer-com/src/components/Footer.js":"8","/Users/darshan/Desktop/taskpro/test/beezer-com/src/redux/store.js":"9","/Users/darshan/Desktop/taskpro/test/beezer-com/src/redux/reducers/index.js":"10","/Users/darshan/Desktop/taskpro/test/beezer-com/src/redux/actions/types.js":"11","/Users/darshan/Desktop/taskpro/test/beezer-com/src/redux/reducers/userReducer.js":"12","/Users/darshan/Desktop/taskpro/test/beezer-com/src/redux/actions/userActions.js":"13","/Users/darshan/Desktop/taskpro/test/beezer-com/src/api/ratings.js":"14","/Users/darshan/Desktop/taskpro/test/beezer-com/src/api/users.js":"15","/Users/darshan/Desktop/taskpro/test/beezer-com/src/api/accounts.js":"16"},{"size":623,"mtime":1609338444814,"results":"17","hashOfConfig":"18"},{"size":497,"mtime":1609348407481,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":1609250057723,"results":"20","hashOfConfig":"18"},{"size":1534,"mtime":1609352213163,"results":"21","hashOfConfig":"18"},{"size":1684,"mtime":1609356349999,"results":"22","hashOfConfig":"18"},{"size":725,"mtime":1609345266062,"results":"23","hashOfConfig":"18"},{"size":1161,"mtime":1609358252161,"results":"24","hashOfConfig":"18"},{"size":726,"mtime":1609356934320,"results":"25","hashOfConfig":"18"},{"size":531,"mtime":1609338012380,"results":"26","hashOfConfig":"18"},{"size":145,"mtime":1609339255776,"results":"27","hashOfConfig":"18"},{"size":122,"mtime":1609354221050,"results":"28","hashOfConfig":"18"},{"size":578,"mtime":1609354238062,"results":"29","hashOfConfig":"18"},{"size":383,"mtime":1609354279182,"results":"30","hashOfConfig":"18"},{"size":491,"mtime":1609352496305,"results":"31","hashOfConfig":"18"},{"size":436,"mtime":1609355443946,"results":"32","hashOfConfig":"18"},{"size":314,"mtime":1609355709307,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"q4nw05",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"36"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"36"},"/Users/darshan/Desktop/taskpro/test/beezer-com/src/index.js",[],["72","73"],"/Users/darshan/Desktop/taskpro/test/beezer-com/src/App.js",[],"/Users/darshan/Desktop/taskpro/test/beezer-com/src/reportWebVitals.js",[],"/Users/darshan/Desktop/taskpro/test/beezer-com/src/components/Rating.js",[],"/Users/darshan/Desktop/taskpro/test/beezer-com/src/components/Users.js",[],"/Users/darshan/Desktop/taskpro/test/beezer-com/src/firebase.js",[],["74","75"],"/Users/darshan/Desktop/taskpro/test/beezer-com/src/components/Account.js",["76"],"import React, { useState, useEffect } from 'react'\n\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nimport AccountApi from '../api/accounts'\n\nfunction AccountComp({ user }) {\n  const [data, setdata] = useState(null)\n  useEffect(() => {\n    if (user !== undefined) {\n      getaccounts(user)\n    }\n  }, [user])\n\n  const getaccounts = async (userdata) => {\n    if (userdata.account) {\n      await AccountApi.getaccountdetails(userdata.account).then((data) => {\n        setdata(data)\n      })\n    }\n  }\n  return (\n    data ? <div className=\"Account-card-Main\">\n      <div className=\"account-card-data\">\n        <span className=\"account-card-name\" >{data.title}</span >\n        <span className=\"pt-30\">- {user.name}</span>\n      </div>\n      <img height=\"180\" src={data.img} alt=\"movie-image\" />\n    </div> : <div className=\"Account-card\">\n        <span className=\"account-card-name\">Getting Data From User....</span>\n      </div>\n\n  )\n}\n\n\nAccountComp.propTypes = {\n  user: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.stateData.user,\n});\nexport default connect(mapStateToProps, null)(AccountComp);","/Users/darshan/Desktop/taskpro/test/beezer-com/src/components/Footer.js",[],"/Users/darshan/Desktop/taskpro/test/beezer-com/src/redux/store.js",[],"/Users/darshan/Desktop/taskpro/test/beezer-com/src/redux/reducers/index.js",[],"/Users/darshan/Desktop/taskpro/test/beezer-com/src/redux/actions/types.js",[],"/Users/darshan/Desktop/taskpro/test/beezer-com/src/redux/reducers/userReducer.js",[],"/Users/darshan/Desktop/taskpro/test/beezer-com/src/redux/actions/userActions.js",[],"/Users/darshan/Desktop/taskpro/test/beezer-com/src/api/ratings.js",["77"],"import { db } from '../firebase'\nimport store from \"../redux/store\";\nimport { setrating } from \"../redux/actions/userActions\";\n\n\n\nconst totalratings = () => db.collection('ratings').get().then(\n  (snapshot) => {\n    store.dispatch(setrating(snapshot.docs.length));\n    return snapshot.docs.length\n  }\n);\n\nconst addrating = (count, rating) => {\n  store.dispatch(setrating(count + 1))\n  db.collection(\"ratings\").doc().set({ value: rating });\n\n}\n\nexport default { totalratings, addrating }\n\n\n\n\n","/Users/darshan/Desktop/taskpro/test/beezer-com/src/api/users.js",["78"],"import { db } from '../firebase'\nimport store from \"../redux/store\";\nimport { setuser, setuserlist } from \"../redux/actions/userActions\";\n\n\n\nconst getusers = () => db.collection('users').onSnapshot((snap) => {\n  const users = [];\n  snap.forEach((doc) => {\n    users.push(doc.data())\n  })\n  if (users.length > 0) {\n    store.dispatch(setuserlist(users));\n    store.dispatch(setuser(users[0]));\n  }\n\n})\n\n\n\nexport default { getusers }\n\n\n\n\n","/Users/darshan/Desktop/taskpro/test/beezer-com/src/api/accounts.js",["79"],"import { db } from '../firebase'\n\n\n\nconst getaccountdetails = (account) => db.collection('accounts')\n  .doc(account)\n  .get()\n  .then((docRef) => {\n    let data = docRef.data()\n    if (data) {\n      return data\n    }\n  })\n  .catch((err) => {\n    console.error(err)\n  })\n\n\n\nexport default { getaccountdetails }\n\n\n\n\n",{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"80","replacedBy":"84"},{"ruleId":"82","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":29,"column":7,"nodeType":"88","endLine":29,"endColumn":60},{"ruleId":"89","severity":1,"message":"90","line":20,"column":1,"nodeType":"91","endLine":20,"endColumn":43},{"ruleId":"89","severity":1,"message":"90","line":21,"column":1,"nodeType":"91","endLine":21,"endColumn":28},{"ruleId":"89","severity":1,"message":"90","line":20,"column":1,"nodeType":"91","endLine":20,"endColumn":37},"no-native-reassign",["92"],"no-negated-in-lhs",["93"],["92"],["93"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]